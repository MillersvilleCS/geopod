Below are the changes made to IDV for Geopod to function.

==============================================================
VisAD:
==============================================================

   
   ==> visad.java3d.DisplayImplJ3D.java
       ================================

       private void setGeometryCapabilities (GeometryArray array)
	   {	
	      
	      ...
	      
	      //  We color isosurfaces so we need to be able to write the color array.
       	  array.setCapability (GeometryArray.ALLOW_REF_DATA_WRITE);
       	  
       	  ...
       	
       }


  ==> visad.java3d.ShadowTypeJ3D.java
      ===============================
      
     	private static Appearance staticMakeCachedAppearance (GraphicsModeControl mode,
			TransparencyAttributes constant_alpha, ColoringAttributes constant_color, 
			GeometryArray geometry, boolean no_material, boolean okToCache)
		{
	   
			...
		
	 		// Geopod Team: Added the capability to write rendering attributes
			//   so we can write the visibility flag to implement the mini-map. 
			//   Below ALLOW_VISIBLE_WRITE is also set.
			appearance.setCapability (Appearance.ALLOW_RENDERING_ATTRIBUTES_WRITE);
			// End Modification
	
			...
	 
	 		/ Geopod Team: Added the capability to write the visible attribute
			//   so we can use the same scene graph but only draw the map and a cone representing 
			//   the Geopod in our top-down display (the mini-map)
			rendering.setCapability (RenderingAttributes.ALLOW_VISIBLE_WRITE);
			// End Modification
	
			...
			
		}	


==============================================================
IDV:
==============================================================


 
 ==> ucar.unidata.idv.control.ThreeDSurfaceControl.java
     ==================================================


	Revision 1:
	==========
	
	public class ThreeDSurfaceControl
		extends GridDisplayControl
			// Millersville University Geopod Team: 
			implements ISubject
			// End Modification
	
	
    Revision 2:
	==========
	
	// Millersville University Geopod Team: 
	private SubjectImpl m_subjectImpl = new SubjectImpl ();
	// End Modification
	
	
	Revision 3:
	==========
	
     m_subjectImpl.notifyObservers (GeopodEventId.ISOSURFACE_LEVEL_CHANGED);
      
     The line above is added to the following methods:
     	1)	protected void displayUnitChanged (Unit oldUnit, Unit newUnit)
     	2) 	private void setLevelWithRawValue (double rawLevel, boolean andDoShare)
				throws VisADException, RemoteException
     	3)	public void setSurfaceValue (double value)


	Revision 4:
	==========
	
     // Millersville University Geopod Team: 
	 // NTO geopod needs this method to be public
	 public Range getDataRange ()
	 {
	 // End Modification

		...
		
	 }


	Revision 5:
	==========
	
     // Millersville University Geopod Team: 
	 // NTO
	 @Override
	 public void addObserver (IObserver observer, GeopodEventId eventId)
	 {
		 m_subjectImpl.addObserver (observer, eventId);
	 }

	 @Override
	 public void removeObserver (IObserver observer, GeopodEventId eventId)
	 {
	 	 m_subjectImpl.removeObserver (observer, eventId);
	 }

	 @Override
	 public void notifyObservers (GeopodEventId eventId)
	 {
		 m_subjectImpl.notifyObservers (eventId);
	 }

	 @Override
	 public void removeObservers ()
	 {
		 m_subjectImpl.removeObservers ();
	 }
	
	 // End Modification